module <%= api_module_name %>::Resources
  class <%= plural_name.camelize %>Resource < Grape::API
    helpers do
      def collection
        # TODO: add `policy_scope`?
        @<%= plural_name %> ||= <%= class_name %>.all
      end

      def resource
        @<%= singular_name %> ||= <%= class_name %>.find(params[:id])
      end
    end

    resource :<%= plural_name %> do
      desc 'Returns a collection of <%= plural_name %>' do
        success <%= entity_class_name %>
      end
      get do
        # TODO: authorize <%= class_name %>, :index?
        present collection,
          with: <%= entity_class_name %>
      end

      desc 'Creates a <%= class_name %>' do
        success <%= entity_class_name %>
      end
      params do
        requires :<%= singular_name %>, type: Hash do
          # TODO: define resource params or remove `params` block
        end
      end
      post do
        @<%= singular_name %> = <%= class_name %>.new(params[:<%= singular_name %>])
        # TODO: authorize resource, :create?
        resource.save!
        present resource,
          with: <%= entity_class_name %>
      end

      params do
        requires :id, type: Integer, desc: '<%= class_name %> ID'
      end
      route_param :id do
        desc 'Returns a <%= class_name %>'
        get do
          # TODO: authorize resource, :show?
          present resource,
            with: <%= entity_class_name %>
        end

        desc 'Updates a <%= class_name %>' do
          success <%= entity_class_name %>
        end
        params do
          requires :<%= singular_name %>, type: Hash do
            # TODO: define resource params or remove `params` block
          end
        end
        put do
          resource.assign_attributes(params[:<%= singular_name %>])
          # TODO: authorize resource, :update?
          resource.save!
          present resource,
            with: <%= entity_class_name %>
        end

        desc 'Deletes a <%= class_name %>'
        delete do
          # TODO: authorize resource, :destroy?
          resource.destroy!
          body false
        end
      end
    end
  end
end
