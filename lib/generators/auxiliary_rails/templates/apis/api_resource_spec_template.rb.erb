require 'rails_helper'

RSpec.describe <%= resource_class_name %>, type: :request do
  describe 'GET <%= api_url_path %>' do
    subject { get '<%= api_url_path %>' }

    it 'returns a list of <%= plural_name %>' do
      create_list(:<%= singular_name %>, 2)

      subject

      expect_status :ok
      expect_json_sizes 2
      expect_json '0', id: <%= class_name %> %>.first.id
    end
  end

  describe 'POST <%= api_url_path %>' do
    subject { post '<%= api_url_path %>' }

    # TODO: write some tests
    skip
  end

  describe 'GET <%= api_url_path %>/:id' do
    subject { get "<%= api_url_path %>/#{<%= singular_name %>.id}" }

    let(:<%= singular_name %>) { create(:<%= singular_name %>) }

    it 'returns a <%= singular_name %> by ID' do
      subject

      expect_status :ok
      expect_json id: <%= singular_name %>.id
    end
  end

  describe 'PUT <%= api_url_path %>/:id' do
    subject { put "<%= api_url_path %>/#{<%= singular_name %>.id}" }

    let(:<%= singular_name %>) { create(:<%= singular_name %>) }

    it 'updates a <%= singular_name %> by ID' do
      skip
    end
  end

  describe 'DELETE <%= api_url_path %>/:id' do
    subject { delete "<%= api_url_path %>/#{<%= singular_name %>.id}" }

    let!(:<%= singular_name %>) { create(:<%= singular_name %>) }

    it 'deletes a <%= singular_name %> by ID' do
      expect { subject }.to change(<%= class_name %>, :count).by -1
      expect_status 204
      expect(response.body).to be_blank
    end
  end
end
